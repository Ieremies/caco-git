#+Title: Caco GIT

#+export_file_name: index
#+setupfile: ~/bin/org-themes/src/readtheorg_inline/readtheorg_inline.theme

Mini curso ministrado pelo Centro Acadêmico da Computação aos alunos da UNICAMP aprofundando seus conhecimentos em =git=.

* Público alvo
Esse mini curso tem como foco o aluno de Computação em seu primeiro semestre, o tal está a cursar MC102 que exige a submissão de laboratórios de programação via GitLab.

Vale ressaltar que, apesar desse ser o nosso público alvo, o curso não está limitado a este e é aberto a todos.

* Objetivo
O curso tem como objetivo construir encima do conhecimento do aluno adquirido para submissão de laboratórios. Entende-se que, muitos desses alunos utilizam a receita pronta disponibilizada pelos professores e monitores e que ainda faltam-lhes noções do que acontece "de baixo do pano".

Assim, esse curso, focando nos casos de uso que julgamos serem comuns aos alunos nessa fase, almeja ampliar a compreensão do sistema =git= como uma ferramenta a auxiliar durante sua graduação.
* Proposta inicial
- Data :: 18 de maio
- Hora :: 17hrs
- Local :: Laboratório do IC (303, a confirmar)
- Duração :: 1 hora.

* Casos de uso
** Revisar comandos do git e de terminal
Vamos começar criando uma parta para trabalharmos.
#+begin_bash
ls
mkdir workshop-git
cd workshop-git
ls
#+end_bash

Comandos básicos de git:
- git clone / init
- git status
- git add
- git commit
- git push
- git pull
** Reverter o arquivo a estado anterior.

Durante o desenvolvimento de trabalhos e projetos, é comum que seja necessário reverter certas mudanças que acabaram gerando erros ou mais problemas.

#+begin_verse
São 11 da noite de um domingo.
Caco, o sapo, possui um laboratório de MC102 para entregar em uma hora.
Caco, o sapo, está nervoso. Seu código não roda.
"FINALMENTE!", grita Caco, o sapo, quebrando o silêncio frio da noite.
Seu código roda! Cinco testes de dez.
"Cinco bola dez", conforma-se Caco, o sapo.

30 minutos.
Hora da corrida final, Caco, o sapo, ainda sonha com a bolsa FAPESP.
Caco, o sapo, desesperadamente tenta os últimos testes.

10 minutos.
Caco, o sapo, suspirando, tenta rodar mais uma vez... e nenhum caso teste é aceito.

5 minutos.
Como reverter? Como voltar a trás?
E se ele pudesse fazer tudo diferente?
Caco, o sapo, não sabe mais como desfazer suas mudanças.

Caco, o sapo, senta e observa seus últimos segundos escorrerem pelos seus dedos.
Só resta-lhe abrir o site da DAC.
#+end_verse

Git é uma ferramenta que se dispõe a resolver isso via sua estrutura.

# TODO Comentar sobre a estrutura interna do git em blobs.

# TODO Precisa elaborar mais sobre esse tópico
** Branchs

#+begin_verbatin
Caco o sapo aprendeu sua lição.
Toda vez que ele quer fazer uma alteração no seu código ele não o faz na main branch.
Ele cria uma nova branch
#+end_verbatin

- Como criar branchs.
- Como dar commit em branchs.
- Como mudar de branch.
- Como juntar branchs
- Remoto vs local
- Comentar sobre as flags de resolução de conflitos <<< eles tem muitas error quando o prof faz mudanças no remoto
- Como apagar/renomear branchs
* Divulgação

** TODO Mandar email na lista da grad
Uma email <2022-05-09 seg> e um no dia <2022-05-16 seg>
** TODO Post no instagram
-  [ ] Arte

* Worklog
** Reunião, segunda, 02 de maio.
topicos da palestra :
- comandos basicos de terminal : mkdir, ls, cd, rm,
- git:
  - explica sobre commits branchs
ex: reverter ao momento que o arquivo estava melhor
trabahar com o git sem precisar estar na main
 - resolver conflito
ex : tentar juntar commits e resolver conflitos vb
 git rebase -i
 - git add.
 - git commit
 - git
 - branch model / git flow

* Referências
